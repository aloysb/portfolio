---
import { cva, type VariantProps } from "class-variance-authority";

import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'button'>, VariantProps<typeof buttonStyles> {
	text: string;
}


const {
	text,
	variant = "solid",
	size = "md",
    class: className,
	...rest // Collect all other props
} = Astro.props;

const buttonStyles = cva(
	// Base styles
	"inline-block font-semibold text-center transition-all duration-200 relative border border-black   active:translate-x-1 active:translate-y-1 active:shadow-active shadow-main rounded-lg cursor-pointer",
	{
		variants: {
			variant: {
				solid: "bg-primary text-secondary hover:bg-primary-hover",
				outline: "bg-white text-secondary border-black hover:bg-gray-50",
                ghost: "bg-transparent text-secondary border-none hover:bg-gray-50 shadow-none",
                link: "bg-transparent text-secondary border-none underline hover:bg-gray-50 shadow-none",
			},
			size: {
				md: "px-4 py-3 text-sm",
				lg: "px-6 py-4 text-md",
			},
		},
		defaultVariants: {
			variant: "solid",
			size: "md",
		},
	},
);
---

<button  class:list={[buttonStyles({ variant, size }), className]} {...rest}>
  {text}
</button> 
